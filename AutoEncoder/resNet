import torch
import torch.nn as nn
import torch.utils.data as data
from torchvision import datasets
from torchvision.transforms import ToTensor
import time 
from util import Models as Model
import torch


# DataLoader
train_set = datasets.CIFAR10(
    root="data",
    train=True,
    download=True,
    transform=ToTensor(),
)

train_loader = data.DataLoader(train_set, batch_size=10000, shuffle=False)

class ResNet(nn.Module):
    def __init__(self):
        super(ResNet, self).__init__()

        model = torch.hub.load('pytorch/vision:v0.10.0', 'resnet18', pretrained=True)
        model.eval()
        
        # Encoder
        
        # Decoder
        model.eval()

    def forward(self, x):
        
        output = self.model(input)
        return output
        # Encoder
        
        # Decoder
        
        
        return

print("TEST:   ", train_set.data.shape)
ResNet(train_set.data)
with torch.no_grad():
        for data, labels in train_loader:
            print("HALLO:   ", data.shape, "  hallo slut")